<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_login.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>